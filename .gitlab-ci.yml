stages:
    - badges
    #- build
    #- test

#build_badges:
#  stage: build
#  image: python:3.9
#  before_script:
#    - apt-get update -qy
#    - pip install anybadge
#    - pip install github-cli
#    - chmod +x get-updated-badge-info.sh
#  script:
#    - echo "Some script to build your code"
#  after_script:
#    - ./get-updated-badge-info.sh
#  artifacts:
#    paths:
#        - badges.json
#        - badges
#    when: always

badges:
  image: python:3.9
  stage: badges
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    PRIVATE_TOKEN: $ACCESS_TOKEN
  cache:
    key: badges
    paths:
      - .cache/pip
      - venv/
  before_script:
     - python -V
     - pip install virtualenv
     - virtualenv venv
     - source venv/bin/activate
  script:
     - pip install badges-gitlab
     - badges-gitlab -V
     - badges-gitlab
  artifacts:
    when: always
    paths:
      - public/badges/*.svg
    expire_in: 3 months
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
      allow_failure: true

#create_badge_svg:
#  stage: build
#  image: python:latest
#  tags:
#    - docker
#  script:
#    - echo "Python other dependencies installation"
#  after_script:
#    - pip install anybadge
#    - commits=$(git rev-list --all --count)
#    - anybadge -l commits -v $commits -f commits.svg -c green
#  artifacts:
#    paths:
#        - commits.svg
#    when: always
#    expire_in: 4 weeks

#run tests:
#  stage: test
#  image: python:3.9
#  script:
#    - pip install pytest pytest-cov pytest-qt
#    - coverage run -m pytest "not pupil"
#    - coverage report
#    - coverage xml
#  artifacts:
#    reports:
#      cobertura: coverage.xml
